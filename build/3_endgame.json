{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a DynamoDB table, Lambda and Role, and even the API gw infrastructure for the Wild Rydes serverless web application workshop",
    "Outputs": {
        "DynamoDBTableArn": {
            "Value": {
                "Fn::GetAtt": [ "DynamoDBTable", "Arn" ]
            }
        },
        "LambdaArn": {
            "Value": {
                "Fn::GetAtt": [ "LambdaInitFunction", "Arn" ]
            }
        },
       "RootUrl": {
           "Description": "Root URL of the API gateway",
           "Value": {"Fn::Join": ["", ["https://", {"Ref": "WildRydesApi"}, ".execute-api.", {"Ref": "AWS::Region"}, ".amazonaws.com"]]}
       }

    },
    "Resources": {
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "Rides",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "RideId",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "RideId",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            }
        },
        "LambdaInitFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "iverve",
                    "S3Key": "public/wildrydes-requestor-js/requestUnicorn.js.zip"
                },
                "Handler": "index.handler",
                "Role": { "Fn::GetAtt": [ "LambdaRole", "Arn" ] },
                "Runtime": "nodejs6.10",
                "Timeout": 60
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn" : "DynamoDBTable",
            "Properties": {
                "RoleName": "WildRydesLambda",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Action": [ "sts:AssumeRole" ],
                        "Effect": "Allow",
                        "Principal": { "Service": [ "lambda.amazonaws.com" ] }
                    } ]
                },
                "Path": "/",
                "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole" ],
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccessWriteAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [ {
                                "Action": [ "dynamodb:PutItem" ],
                                "Effect": "Allow",
                                "Resource": { 
                                    "Fn::GetAtt": [ "DynamoDBTable", "Arn" ]
                                }
                            } ]
                        }
                    }
                ]
            }
        },
        "WildRydesApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Wild Rydes API",
                "Description": "Wild Rydes API",
                "FailOnWarnings": true
            }
        },
        "LambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {"Fn::GetAtt": ["LambdaInitFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["", ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "WildRydesApi"}, "/*"]]}
            }
        },
        "ApiGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": ["apigateway.amazonaws.com"] },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Policies": [{
                    "PolicyName": "ApiGatewayLogsPolicy",
                    "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutLogEvents",
                            "logs:GetLogEvents",
                            "logs:FilterLogEvents"
                        ],
                        "Resource": "*"
                    }]
                    }
                }]
            }
        },
        "ApiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {"Fn::GetAtt": ["ApiGatewayCloudWatchLogsRole", "Arn"] }
            }
        },
        "WildRydesApiStage": {
            "DependsOn": ["ApiGatewayAccount"],
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {"Ref": "ApiDeployment"},
                "MethodSettings": [{
                    "DataTraceEnabled": true,
                    "HttpMethod": "*",
                    "LoggingLevel": "INFO",
                    "ResourcePath": "/*"
                }],
                "RestApiId": {"Ref": "WildRydesApi"},
                "StageName": "prod"
            }
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [ "WildRydesRequest" ],
            "Properties": {
                "RestApiId": {"Ref": "WildRydesApi"},
                "StageName": "DummyStage"
            }
        },
        "WildRydesResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": { "Ref": "WildRydesApi" },
                "ParentId": { "Fn::GetAtt": [ "WildRydesApi", "RootResourceId" ] },
                "PathPart": "ride"
            }
        },
        "WildRydesRequest": {
            "DependsOn": "LambdaPermission",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": { "Ref": "ApiAuthorizer" },
                "HttpMethod": "POST", 
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join": ["", 
                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["LambdaInitFunction", "Arn"]}, "/invocations"]
                    ]},
                "IntegrationResponses": [{ "StatusCode": 200 }],
                "RequestTemplates": {
                    "application/json": 
                        {"Fn::Join": ["", [
                            "{",
                            "  \"name\": \"$input.params('name')\"",
                            "}"
                        ]]}
                }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {"Ref": "WildRydesResource"},
                "RestApiId": {"Ref": "WildRydesApi"},
                "MethodResponses": [{ "StatusCode": 200 }]
            }
        },
	"ApiAuthorizer": {
		"Type": "AWS::ApiGateway::Authorizer",
		"Properties": {
			"AuthorizerResultTtlInSeconds": 300,
			"IdentitySource": "method.request.header.Authorization",
			"Name": "CognitoDefaultUserPoolAuthorizer",
			"RestApiId": {"Ref": "WildRydesApi"},
			"Type": "COGNITO_USER_POOLS",
                        "ProviderARNs": [
                            "arn:aws:cognito-idp:eu-west-2:207531873263:userpool/eu-west-2_eL6g2ClpO"
                                        ]

		}
	}

    }
}
