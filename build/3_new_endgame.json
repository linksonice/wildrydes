{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates a DynamoDB table, Lambda and Role for the Wild Rydes serverless web application workshop",
    "Outputs": {
        "DynamoDBTableArn": {
            "Value": {
                "Fn::GetAtt": [ "DynamoDBTable", "Arn" ]
            }
        },
        "LambdaFunctionArn": {
            "Value": {
                "Fn::GetAtt": [ "LambdaFunction", "Arn" ]
            }
        },
        "LambdaRoleArn": {
            "Value": {
                "Fn::GetAtt": [ "LambdaRole", "Arn" ]
            }
        },
        "ApiParentId": {
            "Value": { "Fn::GetAtt": [ "WildRydes0", "RootResourceId" ] }
        },
        "ApiInvokeUrl": {
            "Value": { 
                "Fn::Join": [
                    "", [                
                            "https://",
                            { "Ref": "WildRydes0" },
                            ".",
                            { "Ref" : "AWS::Region" },
                            ".eu-west-2",                            
                            ".amazonaws",
                            ".com",
                            "/prod"
                         ]
                ]
            },
            "Export": { "Name": "ApiInvokeUrl" }
        }
    },
    "Resources": {
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": "Rides",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "RideId",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "RideId",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 1,
                    "WriteCapacityUnits": 1
                }
            }
        },
        "LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Chooses a Unicorn!",
                "Code": {
                    "S3Bucket": "iverve",
                    "S3Key": "public/wildrydes-requestor-js/requestUnicorn.js.zip"
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [ "LambdaRole", "Arn" ]
                },
                "Runtime": "nodejs6.10",
                "Timeout": 60
            }
        },
        "LambdaRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn" : "DynamoDBTable",
            "Properties": {
                "RoleName": "WildRydesLambda",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Action": [ "sts:AssumeRole" ],
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "lambda.amazonaws.com" ]
                        }
                    } ]
                },
                "Path": "/",
                "ManagedPolicyArns": [ "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole" ],
                "Policies": [
                    {
                        "PolicyName": "DynamoDBAccessWriteAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [ {
                                "Action": [ "dynamodb:PutItem" ],
                                "Effect": "Allow",
                                "Resource": { 
                                    "Fn::GetAtt": [ "DynamoDBTable", "Arn" ]
                                }
                            } ]
                        }
                    }
                ]
            }
        },
        "WildRydes0": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "WildRydes0",
                "Description": "WildRides0",
                "FailOnWarnings": true,
                "EndpointConfiguration": { "Types": [ "EDGE" ] }
            }
        },
        "ApiAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "DependsOn": [ "WildRydes0" ],
            "Properties": {
                "AuthorizerResultTtlInSeconds": 300,
                "IdentitySource": "method.request.header.Authorization",
                "Name": "CognitoDefaultUserPoolAuthorizer",
                "RestApiId": {"Ref": "WildRydes0"},
                "Type": "COGNITO_USER_POOLS",
                "ProviderARNs": [
                    { "Fn::ImportValue": { "Fn::Sub" : "UserPoolArn" }}
                                ]

            }
        },
        "WildRydesResource": {
            "Type": "AWS::ApiGateway::Resource",
            "DependsOn": [ "WildRydes0" ],
            "Properties": {
                "RestApiId": { "Ref": "WildRydes0" },
                "ParentId": { "Fn::GetAtt": [ "WildRydes0", "RootResourceId" ] },
                "PathPart": "ride"
            }
        },
        "WildRydesMethod": {
            "DependsOn": "LambdaFunction",
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "COGNITO_USER_POOLS",
                "AuthorizerId": { "Ref": "ApiAuthorizer" },
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": { "Fn::Join": ["",
                        [ "arn:aws:apigateway:", { "Ref": "AWS::Region" }, ":lambda:path/2015-03-31/functions/", { "Fn::GetAtt": [ "LambdaFunction", "Arn" ] }, "/invocations" ]
                    ] },
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "RequestTemplates": {
                        "application/json":
                            { "Fn::Join": ["", [
                                "{",
                                "  \"name\": \"$input.params('name')\"",
                                "}"
                            ] ] }
                    }
                },
                "RequestParameters": {
                    "method.request.querystring.name": false
                },
                "ResourceId": {"Ref": "WildRydesResource"},
                "RestApiId": {"Ref": "WildRydes0"},
                "MethodResponses": [
                    {
                        "ResponseParameters": { 
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                            "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                            "method.response.header.Access-Control-Allow-Origin": "'*'"
                        },
                        "StatusCode": 200 
                    }
                ]
            }
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [ "WildRydesMethod" ],
            "Properties": {
                "RestApiId": {"Ref": "WildRydes0"},
                "StageName": "prod"
            }
        }

    }
}
